// –ü—Ä–æ—Å—Ç–æ–π API –¥–ª—è GitHub Pages
const API_DATA = {
  news: [
    {
      id: 1,
      title: "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Gift Propaganda!",
      content: "–í–∞—à –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.",
      content_html: "<p>–í–∞—à –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.</p>",
      publish_date: new Date().toISOString(),
      category: "welcome",
      link: "#",
      media: []
    },
    {
      id: 2,
      title: "üì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç",
      content: "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ Bitcoin, Ethereum –∏ –¥—Ä—É–≥–∏—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö.",
      content_html: "<p>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ Bitcoin, Ethereum –∏ –¥—Ä—É–≥–∏—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö.</p>",
      publish_date: new Date().toISOString(),
      category: "crypto",
      link: "#",
      media: []
    },
    {
      id: 3,
      title: "üéÆ –ù–æ–≤–æ—Å—Ç–∏ –∏–≥—Ä–æ–≤–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏",
      content: "–°–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ –∏–≥—Ä –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.",
      content_html: "<p>–°–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ –∏–≥—Ä –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.</p>",
      publish_date: new Date().toISOString(),
      category: "gaming",
      link: "#",
      media: []
    }
  ],
  categories: ["welcome", "crypto", "gaming", "tech", "community"]
};

// –ò–º–∏—Ç–∞—Ü–∏—è API endpoints
window.API = {
  async getNews(category = null, page = 1, limit = 20) {
    let filteredNews = API_DATA.news;
    
    if (category && category !== 'all') {
      filteredNews = filteredNews.filter(item => item.category === category);
    }
    
    const start = (page - 1) * limit;
    const end = start + limit;
    const paginatedNews = filteredNews.slice(start, end);
    
    return {
      status: "success",
      data: paginatedNews,
      total: filteredNews.length,
      page: page,
      pages: Math.ceil(filteredNews.length / limit)
    };
  },
  
  async getNewsById(id) {
    const news = API_DATA.news.find(item => item.id === parseInt(id));
    return news || null;
  },
  
  async getCategories() {
    return {
      status: "success",
      data: API_DATA.categories
    };
  }
}; 